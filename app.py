import streamlit as st
import pandas as pd
import numpy as np
from train_model import FakeNewsDetector, train_and_save_model
import joblib
import os
from analyze_datasets import get_dataset_stats

# Configuration de la page
st.set_page_config(
    page_title="D√©tecteur de Fake News",
    page_icon="üì∞"
)

# Titre de l'application
st.title("D√©tecteur de Fake News üì∞")

# Fonction pour charger ou entra√Æner le mod√®le
def get_model():
    try:
        detector = FakeNewsDetector.load('fake_news_model.joblib')
        st.success("Mod√®le charg√© avec succ√®s !")
    except:
        with st.spinner("Premi√®re utilisation : entra√Ænement du mod√®le en cours..."):
            # V√©rifier si les fichiers de donn√©es existent
            if not os.path.exists('Fake.csv') or not os.path.exists('True.csv'):
                # Charger les donn√©es depuis le repository
                fake_url = "https://raw.githubusercontent.com/Rimka33/detection-de-fake-news/main/Fake.csv"
                true_url = "https://raw.githubusercontent.com/Rimka33/detection-de-fake-news/main/True.csv"
                
                try:
                    df_fake = pd.read_csv(fake_url)
                    df_true = pd.read_csv(true_url)
                    
                    # Sauvegarder localement
                    df_fake.to_csv('Fake.csv', index=False)
                    df_true.to_csv('True.csv', index=False)
                except Exception as e:
                    st.error(f"Erreur lors du chargement des donn√©es : {str(e)}")
                    st.stop()
            
            # Entra√Æner le mod√®le
            train_and_save_model()
            detector = FakeNewsDetector.load('fake_news_model.joblib')
            st.success("Mod√®le entra√Æn√© et charg√© avec succ√®s !")
    
    return detector

try:
    # Charger le mod√®le
    detector = get_model()
    
    if detector is not None:
        st.header("üìù Analyser un article")
        
        # Formulaire de saisie
        with st.form("news_form"):
            title = st.text_input("Titre de l'article")
            text = st.text_area("Contenu de l'article")
            submitted = st.form_submit_button("Analyser")
        
        if submitted and text:
            with st.spinner("Analyse en cours..."):
                # Utiliser le mod√®le de clustering
                result = detector.predict_one(title if title else text[:50], text)
                
                # Affichage des r√©sultats
                st.header("üìä R√©sultats de l'analyse")
                
                # Affichage du verdict
                if result['is_fake']:
                    st.error("‚ö†Ô∏è FAKE NEWS D√âTECT√âE")
                    st.metric(
                        "Probabilit√© que ce soit une fake news",
                        f"{result['confidence']*100:.1f}%"
                    )
                else:
                    st.success("‚úÖ INFORMATION VRAIE")
                    st.metric(
                        "Probabilit√© que ce soit une information vraie",
                        f"{(1-result['confidence'])*100:.1f}%"
                    )
                
                # D√©tails techniques
                st.write(f"Cluster assign√© : {result['cluster']}")
                st.write(f"Z-score : {result['z_score']:.2f}")
                
                # Conseils
                st.info("üí° Conseils pour √©valuer la fiabilit√© d'un article :")
                st.markdown("""
                - **Source** : V√©rifiez la source de l'article et sa r√©putation
                - **V√©rification** : Recherchez des informations similaires sur d'autres sites fiables
                - **Sensationalisme** : M√©fiez-vous des titres exag√©r√©s ou trop sensationnels
                - **Date** : V√©rifiez la date de publication
                - **Sources cit√©es** : Examinez les citations et les sources mentionn√©es
                - **√âmotions** : M√©fiez-vous des articles qui cherchent √† provoquer des √©motions fortes
                - **V√©rification crois√©e** : Utilisez des sites de fact-checking reconnus
                """)
        
        # √Ä propos
        st.markdown("---")
        st.header("‚ÑπÔ∏è √Ä propos")
        st.write("""
        Cette application utilise un mod√®le de machine learning pour d√©tecter les fake news.
        Le mod√®le a √©t√© entra√Æn√© sur un ensemble de donn√©es d'exemple contenant des vraies et fausses nouvelles.
        
        ‚ö†Ô∏è **Note importante** : Cette application est un outil d'aide √† la d√©cision. 
        Pour une analyse compl√®te, utilisez toujours votre jugement critique et v√©rifiez les sources.
        """)

except Exception as e:
    st.error(f"Une erreur est survenue : {str(e)}")
    st.info("Si le probl√®me persiste, essayez de red√©marrer l'application.")