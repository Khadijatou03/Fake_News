import streamlit as st
import pandas as pd
import numpy as np
from train_model import FakeNewsDetector, train_and_save_model
import joblib
import os
from langdetect import detect

# Configuration de la page - version minimale pour d√©ploiement
st.set_page_config(
    page_title="D√©tecteur de Fake News",
    page_icon="üì∞"
)

# Titre de l'application
st.title("D√©tecteur de Fake News üì∞")

# Version simplifi√©e - pas de fonctions complexes

# Fonction pour charger ou entra√Æner le mod√®le
def get_model():
    try:
        detector = FakeNewsDetector.load('fake_news_model.joblib')
        st.success("Mod√®le charg√© avec succ√®s !")
    except:
        with st.spinner("Premi√®re utilisation : entra√Ænement du mod√®le en cours..."):
            # V√©rifier si les fichiers de donn√©es existent
            if not os.path.exists('Fake.csv') or not os.path.exists('True.csv'):
                # Charger les donn√©es depuis le repository
                fake_url = "https://raw.githubusercontent.com/Rimka33/detection-de-fake-news/main/Fake.csv"
                true_url = "https://raw.githubusercontent.com/Rimka33/detection-de-fake-news/main/True.csv"
                
                try:
                    df_fake = pd.read_csv(fake_url)
                    df_true = pd.read_csv(true_url)
                    
                    # Sauvegarder localement
                    df_fake.to_csv('Fake.csv', index=False)
                    df_true.to_csv('True.csv', index=False)
                except Exception as e:
                    st.error(f"Erreur lors du chargement des donn√©es : {str(e)}")
                    st.stop()
            
            # Entra√Æner le mod√®le
            train_and_save_model()
            detector = FakeNewsDetector.load('fake_news_model.joblib')
            st.success("Mod√®le entra√Æn√© et charg√© avec succ√®s !")
    
    return detector

# Version simplifi√©e pour le d√©ploiement - pas d'onglets ni de statistiques complexes

try:
    # Charger le mod√®le
    detector = get_model()
    
    if detector is not None:
        st.header("üìù Analyser un article")
        
        # Formulaire de saisie simplifi√©
        with st.form("news_form"):
            title = st.text_input("Titre de l'article")
            text = st.text_area("Contenu de l'article")
            submitted = st.form_submit_button("Analyser")
        
        if submitted and text:  # Le titre peut √™tre optionnel
            with st.spinner("Analyse en cours..."):
                # D√©tecter automatiquement la langue
                try:
                    lang = detect(text)
                    if lang == 'fr':
                        detected_language = "Fran√ßais"
                    else:
                        detected_language = "Anglais"
                except:
                    detected_language = "Anglais"
                
                st.info(f"Langue d√©tect√©e : {detected_language}")
                
                # Utiliser le mod√®le de clustering par d√©faut
                result = detector.predict_one(title if title else text[:50], text)
                
                # Affichage des r√©sultats simplifi√©s
                st.header("üìä R√©sultats de l'analyse")
                
                # Affichage du verdict sans colonnes
                if result['is_fake']:
                    st.error("‚ö†Ô∏è Cet article est probablement une FAKE NEWS")
                else:
                    st.success("‚úÖ Cet article semble fiable")
                
                st.metric("Indice de confiance", f"{result['confidence']*100:.1f}%")
                
                # D√©tails techniques simplifi√©s
                st.write(f"Langue d√©tect√©e : {detected_language}")
                st.write(f"Cluster assign√© : {result['cluster']}")
                st.write(f"Z-score : {result['z_score']:.2f}")
        
        # Informations simplifi√©es sur l'application
        st.markdown("---")
        st.header("‚ÑπÔ∏è √Ä propos")
        st.write("Cette application utilise l'apprentissage automatique pour d√©tecter les fake news.")
        st.write("Le mod√®le a √©t√© entra√Æn√© sur des datasets en anglais et en fran√ßais.")
        st.write("La langue de l'article est d√©tect√©e automatiquement.")
        
        st.write("Pour plus de d√©tails et de statistiques, ex√©cutez l'application en local.")

    else:
        st.warning("‚ö†Ô∏è Le mod√®le n'est pas charg√©. Veuillez ex√©cuter train_model.py d'abord.")

except Exception as e:
    st.error(f"Erreur : {str(e)}")
    st.info("Si vous rencontrez des probl√®mes, essayez d'ex√©cuter l'application en local.")
